{
	"jobConfig": {
		"name": "tickers-glue-job",
		"description": "",
		"role": "arn:aws:iam::466414787742:role/GluePOCETLRole",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 2,
		"maxCapacity": 2,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 20,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "tickers-glue-job.py",
		"scriptLocation": "s3://aws-glue-assets-466414787742-us-east-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-07-11T09:05:16.218Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-466414787742-us-east-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-466414787742-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom pyspark.sql.functions import monotonically_increasing_id, concat_ws\n\n## @params: [JOB_NAME]\nargs = getResolvedOptions(sys.argv, [ 'database', 'table_name', 'data_length', 'JOB_NAME'])\n\ndatabase_name = args['database']\ntable_name = args['table_name']\n\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\ndynamic_df = glueContext.create_dynamic_frame.from_catalog(\n        database = database_name,\n        table_name = table_name\n)\n\ndf = dynamic_df.toDF()\n\ndf = df.withColumn(\"index\", monotonically_increasing_id())\ndf = df.withColumn(\"inst_srt_key\", concat_ws(\"#\", df['index'], df['instType'], df['instId']))\n\n\nprint(df.show())\njob.commit()"
}